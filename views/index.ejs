<html>
  <head>
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
  </head>

  <body>
    <h1>Web SaaS Starter Kit - Node.js, Express</h1>
    
    <h3>Boilerplate for a web app with common features that every SaaS(Software as a Service) needs</h3>
    <br/><br/>Every time, I wanted to build a new web app, I used to code everything from scratch. Login, signup, session management, email notifications, and whatnot. Eventually, when I had found the right tools and code for everything, I kept that as a starter template for myself so I wouldn't need to solve the challenges that I had already solved. 
    <br/><br/>Am I the only person who needs these features for a new project? Or does everyone needs the same features in their web-based SaaS tool? Why not open-source this and let everyone bootstrap their projects with this template!
    <br/><br/>I hope, this saves some time and helps you invest your time and energy in making system design and programming decisions that are unique to your SaaS web app. Start a project a little ahead of the starting line, where some common features are already implemented and well tested.

    <br/>
    <h2>Features</h2>
    
    <ul>
      <li>Signup and signin | <a href="/auth">Demo</a></li>
      <li>Session management | <a href="/user/dashboard">Demo</a></li>
      <li>Reset password | <a href="/auth">Demo</a></li>
      <li>Email notifications | Done (Check app logs for test email links)</li>
      <li>Queues and jobs | Done</li>
      <li>Cron jobs | Done</li>
      <li>Feature flagging | TBD</li>
      <li>Single file to configure features(e.g. API keys, settings)</li>
    </ul>

    <br/>
    <b>Made to last long</b>
    <p>For most of these features, I have used other stable and well-maintained open-source projects. So you don't need to rely on me to keep this starter kit up-to-date(well, except updating once in a while, which I can certainly find time for).
    </p>

    <br/>
    <h2>Get started</h2>
    <ol>
    <li>Clone <a href="<%= process.env.REPO_URL %>">this repo</a></li>
    <li><code>npm install</code></li>
    <li>Update the config for development (<code>config/development.env</code>)</li>
    <li>Make your changes to the code</li>
    <li><code>npm start</code></li>
    </ol>

    <h3>Folder structure</h3>
    <ul>
    <li> <code>app.js</code> The main file that spawns the server</li>
    <li> <code>routes</code> You may call it controller as well. The purpose of this code is to route requests to appropriate service after validation</li>
    <li> <code>middleware</code> Different routes want to apply some common logic before the request is processed e.g. <i>is this a request from an authenticated user?</i>. 
      This folder contains code for those common things you want to do before the request is processed.
      If you know express, you know this already. If not, check <code>routes/auth.js</code> to see how you can call a middleware on a route</li>
    <li> <code>services</code> The purpose of this code is to make request to database or external APIs. Controllers(`routes`) and other services use the services available here</li>
    <li> <code>views</code> Frontend html code. We use <code>ejs</code> here as the templating langugage</li>
    <li> <code>views/email-templates</code> All the email templates written in <code>mjml</code> and then exported to <code>ejs</code></li>
    <li> <code>public</code> Frontend side assets including styles and javascript code</li>
    <li> <code>config</code> The configurations, you'll likely want to change to suit your project</li>
    </ul>

    <h3>Configuration</h3>
    Update them at <code>config/development.js</code> or <code>config/production.js</code>
    <ul>
      <% for(let conf in configs){ %>
          <li><%= conf %></li>
      <% } %>
    </ul>

    <br/>
    <h2>Checklist for production deployment</h2>
    1. Update the config for production (<code>config/production.env</code>)<br/>
    2. Make sure to run the server with <code>NODE_ENV=production (e.g. node app.js --prod)</code>

    <br/><br/><br/><br/><br/>
    <footer style="text-align: center;">
        Made with awesome open-source projects ðŸ‘‰ express, cors, morgan, nodemailer, mjml, supertokens, etc.
    </footer>
  </body>
</html>